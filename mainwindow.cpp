#include "mainwindow.h"
#include "ui_mainwindow.h"
#include "usericon.h"
#include "macroanalysiswidget.h"
#include "logindialog.h"
#include "userprofiledialog.h"
#include "settingsdialog.h"
#include "searchresultsdialog.h"
#include "qcustomplot.h"

#include <QGraphicsDropShadowEffect>
#include <QPropertyAnimation>
#include <QTimer>
#include <QFile>
#include <QApplication>
#include <QHBoxLayout>
#include <QVBoxLayout>
#include <QToolButton>
#include <QPushButton>
#include <QInputDialog>
#include <QMenu>
#include <QIcon>
#include <QLabel>
#include <QWidget>
#include <QMessageBox>
#include <QTextEdit>

// --- Circular ProgressBar —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∏ —Ç–µ–Ω—å—é ---
CircularProgressBar::CircularProgressBar(QWidget *parent) : QWidget(parent) {
    setMinimumSize(120, 120);

    // –¢–µ–Ω—å
    auto *shadow = new QGraphicsDropShadowEffect(this);
    shadow->setBlurRadius(16);
    shadow->setOffset(0, 4);
    shadow->setColor(QColor(0,0,0,40));
    setGraphicsEffect(shadow);
}

void CircularProgressBar::setValue(int value) {
    m_value = value; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    update(); // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
}

void CircularProgressBar::paintEvent(QPaintEvent *) {
    QPainter p(this);
    p.setRenderHint(QPainter::Antialiasing); // –í–∫–ª—é—á–µ–Ω–∏–µ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è
    QRectF rect(16, 16, width()-32, height()-32); // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ —Ä–∏—Å–æ–≤–∫–∏

    // –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    QConicalGradient gradient(rect.center(), 90);
    gradient.setColorAt(0, QColor("#4f8cff"));
    gradient.setColorAt(0.5, QColor("#00e0c6"));
    gradient.setColorAt(1, QColor("#4f8cff"));

    // –§–æ–Ω–æ–≤—ã–π –∫—Ä—É–≥
    p.setPen(QPen(QColor(230,230,240,180), 14));
    p.drawEllipse(rect);

    // –ü—Ä–æ–≥—Ä–µ—Å—Å
    p.setPen(QPen(QBrush(gradient), 14, Qt::SolidLine, Qt::RoundCap));
    int span = static_cast<int>(360.0 * m_value / 100.0);
    p.drawArc(rect, 90*16, -span*16);

    // –¢–µ–∫—Å—Ç
    p.setPen(QPen(QColor("#222"), 2));
    QFont font = p.font();
    font.setPointSize(22);
    font.setBold(true);
    p.setFont(font);
    p.drawText(rect, Qt::AlignCenter, QString("%1%").arg(m_value));
}


MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)

{
    ui->setupUi(this);

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    setTheme(":/theme_light.qss"); // –∏–ª–∏ "theme_dark.qss"

    setWindowTitle("RiskGuard");
    resize(1280, 800);

    // --- –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω ---
    mainScreenWidget = new QWidget(this);
    QVBoxLayout *mainLayout = new QVBoxLayout(mainScreenWidget);
    mainLayout->setSpacing(18);
    mainLayout->setContentsMargins(0,0,0,0);

    // --- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å ---
    QWidget *topBar = new QWidget;
    QHBoxLayout *topLayout = new QHBoxLayout(topBar);
    topLayout->setContentsMargins(10, 5, 10, 5);

    createHeader();
    mainLayout->addWidget(headerWidget);

    createDashboard();
    mainLayout->addWidget(dashboardWidget, 1);

    createFooter();
    mainLayout->addWidget(footerToolbar);

    // --- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ---
    macroWidget = new MacroAnalysisWidget(this);
    connect(macroWidget, &MacroAnalysisWidget::goHome, this, &MainWindow::showMainScreen);
    connect(macroWidget, &MacroAnalysisWidget::updateRisk, this, &MainWindow::updateRiskInfo);


    // --- –°–æ–±—ã—Ç–∏–π–Ω—ã–π –∞–Ω–∞–ª–∏–∑ ---
    eventRiskWidget = new EventRiskWidget(this);
    connect(eventRiskWidget, &EventRiskWidget::goHome, this, &MainWindow::showMainScreen);
    connect(eventRiskWidget, &EventRiskWidget::updateRisk, this, &MainWindow::updateRiskInfo);


    // --- –°—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ ---
    stochasticWidget = new StochasticRiskWidget(this);
    connect(stochasticWidget, &StochasticRiskWidget::goHome, this, &MainWindow::showMainScreen);
    connect(stochasticWidget, &StochasticRiskWidget::updateRisk, this, &MainWindow::updateRiskInfo);

    alertsWidget = new AlertsWidget(this);
    reportsWidget = new ReportsWidget(this);

    // --- –°—Ç–µ–∫ –≤–∏–¥–∂–µ—Ç–æ–≤ ---
    stackedWidget = new QStackedWidget(this);
    stackedWidget->addWidget(mainScreenWidget); // 0
    stackedWidget->addWidget(macroWidget);      // 1
    stackedWidget->addWidget(eventRiskWidget);  // 2
    stackedWidget->addWidget(stochasticWidget); // 3
    stackedWidget->addWidget(alertsWidget);     // 4
    stackedWidget->addWidget(reportsWidget);    // 5

    connect(alertsWidget, &AlertsWidget::goHomeRequested, this, &MainWindow::showMainScreen);
    connect(reportsWidget, &ReportsWidget::goHomeRequested, this, &MainWindow::showMainScreen);

    setCentralWidget(stackedWidget);
    stackedWidget->setCurrentWidget(mainScreenWidget);
}

MainWindow::~MainWindow()
{
    delete ui;
}
void MainWindow::createHeader() {
    headerWidget = new QWidget(this); // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
    headerWidget->setObjectName("HeaderWidget"); // –í–∞–∂–Ω–æ!
    headerWidget->setStyleSheet("background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #4f8cff, stop:1 #00e0c6); border-radius: 0 0 24px 24px;");
    headerWidget->setFixedHeight(76);

    QHBoxLayout *layout = new QHBoxLayout(headerWidget); // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout
    layout->setContentsMargins(32, 0, 32, 0);

    // –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
    QLabel *logo = new QLabel(headerWidget);
    logo->setPixmap(QPixmap(":/icons/logo_modern.svg").scaled(44, 44, Qt::KeepAspectRatio, Qt::SmoothTransformation));
    QLabel *appName = new QLabel("RiskGuard", headerWidget);
    appName->setStyleSheet("font-size: 26px; font-weight: 700; color: white; margin-left: 12px; letter-spacing: 1px;");
    QHBoxLayout *logoLayout = new QHBoxLayout();
    logoLayout->addWidget(logo);
    logoLayout->addWidget(appName);

    QWidget *logoWidget = new QWidget(headerWidget); // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    logoWidget->setLayout(logoLayout);

    // –ü–æ–∏—Å–∫
    searchLine = new QLineEdit(headerWidget);
    searchLine->setPlaceholderText("üîé –ü–æ–∏—Å–∫ —Ä–∏—Å–∫–æ–≤, —Ä–µ–≥–∏–æ–Ω–æ–≤...");
    searchLine->setFixedWidth(340);
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notificationsButton = new QToolButton(headerWidget);
    notificationsButton->setIcon(QIcon(":/icons/bell_modern.svg"));
    notificationsButton->setIconSize(QSize(32, 32));
    notificationsButton->setStyleSheet("QToolButton { border: none; background: transparent; }");
    notifIndicator = new QLabel(headerWidget);
    notifIndicator->setFixedSize(13, 13);
    notifIndicator->setStyleSheet("background: #ff4d67; border-radius: 7px; border: 2px solid #fff;");
    notifIndicator->move(8, 8);
    notifIndicator->raise();

    QWidget *notifWidget = new QWidget(headerWidget);
    QHBoxLayout *notifLayout = new QHBoxLayout(notifWidget);
    notifLayout->setContentsMargins(0, 0, 0, 0);
    notifLayout->addWidget(notificationsButton); // –∫–Ω–æ–ø–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notifLayout->addWidget(notifIndicator); // –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä

    layout->addWidget(logoWidget, 0, Qt::AlignLeft); // –õ–æ–≥–æ—Ç–∏–ø
    layout->addSpacing(36);
    layout->addWidget(searchLine, 0); // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
    layout->addStretch(); // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    layout->addWidget(notifWidget); // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    layout->addSpacing(18);

    // --- –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–∫–æ–Ω–∫–æ–π ---
    QToolButton *userButton = new QToolButton(headerWidget);
    userButton->setFixedSize(40, 40);
    userButton->setIcon(QIcon(":/icons/user_modern.svg")); // –ü–æ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É
    userButton->setIconSize(QSize(32, 32));
    userButton->setStyleSheet(R"(
        QToolButton {
            border: none;
            background: #ffffff;
            border-radius: 20px;
            padding: 4px;
            transitition: all 0.3s ease;
        }
        QToolButton:hover {
            background: #eaf2ff;
        }
    )");

    // --- –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    QMenu *userMenu = new QMenu(userButton);
    QAction *profileAction = userMenu->addAction("–ü—Ä–æ—Ñ–∏–ª—å");
    QAction *settingsAction = userMenu->addAction("–ù–∞—Å—Ç—Ä–æ–π–∫–∏");
    userMenu->addSeparator();
    QAction *logoutAction = userMenu->addAction("–í—ã—Ö–æ–¥");

    connect(profileAction, &QAction::triggered, this, &MainWindow::openUserProfile);
    connect(settingsAction, &QAction::triggered, this, &MainWindow::openUserSettings);
    connect(logoutAction, &QAction::triggered, this, &MainWindow::handleLogout);
    connect(searchLine, &QLineEdit::returnPressed, this, &MainWindow::handleSearch);

    userButton->setMenu(userMenu); // –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userButton->setPopupMode(QToolButton::InstantPopup); // –º–µ–Ω—é –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ

    layout->addWidget(userButton); // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ layout
}

void MainWindow::openUserProfile() {
    if (!profileDialog)
        profileDialog = new UserProfileDialog(this); // –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–æ—Ñ–∏–ª—è
    profileDialog->show();
}

void MainWindow::openUserSettings() {
    if (!settingsDialog) {
        settingsDialog = new SettingsDialog(this); // –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        connect(settingsDialog, &SettingsDialog::themeChanged, this, &MainWindow::setTheme);
    }
    settingsDialog->show();
}

void MainWindow::handleLogout()
{
    this->hide();
    LoginDialog loginDialog;
    if (loginDialog.exec() == QDialog::Accepted) {
        this->show(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–Ω–æ–≤–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
    } else {
        qApp->quit(); // –í—ã—Ö–æ–¥, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –æ—Ç–º–µ–Ω–∞
    }
}

void MainWindow::createDashboard() {
    dashboardWidget = new QWidget(this);
    dashboardWidget->setStyleSheet("background: transparent;");

    QVBoxLayout *mainLayout = new QVBoxLayout(dashboardWidget); // –û—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
    mainLayout->setSpacing(18);

    // --- –î–∞—à–±–æ—Ä–¥ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Å—Ç–µ–∫–ª–∞ ---
    QFrame *dashFrame = new QFrame(dashboardWidget);
    dashFrame->setStyleSheet("background: rgba(255,255,255,0.7); border-radius: 28px; border: 1.5px solid #e0e6ef; box-shadow: 0 8px 32px rgba(80,120,255,0.10);");
    QHBoxLayout *dashLayout = new QHBoxLayout(dashFrame);

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∏—Å–∫–∞
    riskCircle = new CircularProgressBar(dashFrame);
    riskCircle->setValue(65);

    QVBoxLayout *riskInfo = new QVBoxLayout();
    riskLabel = new QLabel("–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: <b>0%</b> <span style='color:#2ecc71;'>(–∑–µ–ª—ë–Ω–∞—è –∑–æ–Ω–∞)</span>", dashFrame);
    riskLabel->setStyleSheet("font-size: 18px; color: #22304a;");
    changeLabel = new QLabel("‚Üë <b>%0", dashFrame);
    changeLabel->setStyleSheet("font-size: 14px; color: #00b894;");
    analysisLabel = new QLabel("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ <b>X</b>", dashFrame);
    analysisLabel->setStyleSheet("font-size: 14px; color: #888; font-style: italic;");
    analysisLabel->setWordWrap(true);

    riskInfo->addWidget(riskLabel);
    riskInfo->addWidget(changeLabel);
    riskInfo->addWidget(analysisLabel);

    dashLayout->addWidget(riskCircle, 0, Qt::AlignVCenter);
    dashLayout->addSpacing(28);
    dashLayout->addLayout(riskInfo);

    // --- –§–∏–ª—å—Ç—Ä—ã ---
    QHBoxLayout *filterLayout = new QHBoxLayout();
    QLabel *filterLabel = new QLabel("–§–∏–ª—å—Ç—Ä—ã:", dashboardWidget);
    filterLabel->setStyleSheet("font-weight: 600; color: #4f8cff;");
    regionCombo = new QComboBox(dashboardWidget);
    regionCombo->addItems({"–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã", "–°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞", "–ï–≤—Ä–æ–ø–∞", "–ê–∑–∏—è", "–ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫"});
    periodCombo = new QComboBox(dashboardWidget);
    periodCombo->addItems({"–ü–µ—Ä–∏–æ–¥", "–î–µ–Ω—å", "–ù–µ–¥–µ–ª—è", "–ú–µ—Å—è—Ü"});
    typeCombo = new QComboBox(dashboardWidget);
    typeCombo->addItems({"–í—Å–µ —Ç–∏–ø—ã", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π", "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π", "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π"});

    // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–±–æ–±–æ–∫—Å–æ–≤
    QString comboStyle = R"(
    QComboBox {
        background-color: white;
        color: black;
        padding: 4px 8px;
        border-radius: 6px;
        border: 1px solid #ccc;
    }
    QComboBox QAbstractItemView {
        background-color: white;
        color: black;
        selection-background-color: #e0e0e0;
        selection-color: black;
    }
    )";

    regionCombo->setStyleSheet(comboStyle); // –°—Ç–∏–ª–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
    periodCombo->setStyleSheet(comboStyle);
    typeCombo->setStyleSheet(comboStyle);

    filterLayout->addWidget(filterLabel);
    filterLayout->addWidget(regionCombo);
    filterLayout->addWidget(periodCombo);
    filterLayout->addWidget(typeCombo);
    filterLayout->addStretch(); // –ü—Ä–æ—Ç–∞–ª–∫–∏–≤–∞–µ–º –≤—Å–µ –≤–≤–µ—Ä—Ö

    // --- –ö–ª—é—á–µ–≤—ã–µ –≤–∏–¥–∂–µ—Ç—ã (–∑–∞–≥–ª—É—à–∫–∏) ---
    QHBoxLayout *widgetsLayout = new QHBoxLayout();

    // --- –ö–∞—Ä—Ç–∞ —Ä–∏—Å–∫–æ–≤ (—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞) ---
    riskMapWidget = new QWidget(dashboardWidget);
    riskMapWidget->setMinimumSize(300, 200);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    QVBoxLayout *riskMapLayout = new QVBoxLayout(riskMapWidget);

    riskMapImage = new QLabel;
    riskMapImage->setAlignment(Qt::AlignCenter);
    riskMapLayout->addWidget(riskMapImage);

    QLabel *mapLabel = new QLabel("–ö–∞—Ä—Ç–∞ —Ä–∏—Å–∫–æ–≤ (—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞)");
    mapLabel->setAlignment(Qt::AlignCenter);
    mapLabel->setStyleSheet("font-weight: bold; font-size: 16px; color: #22304a;");
    riskMapLayout->addWidget(mapLabel);

    widgetsLayout->addWidget(riskMapWidget);

    // --- –ì—Ä–∞—Ñ–∏–∫: –í–í–ü / –ò–Ω—Ñ–ª—è—Ü–∏—è / –°—Ç–∞–≤–∫–∏ ---
    economicChartPlot = new QCustomPlot(dashboardWidget);
    economicChartPlot->setMinimumSize(300, 200);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    economicChartPlot->setProperty("glass", 1);

    // --- –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---
    QVector<double> x(12), gdp(12), inflation(12), rates(12);
    for (int i = 0; i < 12; ++i) {
        x[i] = i + 1;
        gdp[i] = 2 + qSin(i / 2.0);
        inflation[i] = 5 + qCos(i / 3.0);
        rates[i] = 3 + qSin(i / 1.5);
    }

    economicChartPlot->addGraph();
    economicChartPlot->graph(0)->setName("–í–í–ü");
    economicChartPlot->graph(0)->setData(x, gdp);
    economicChartPlot->graph(0)->setPen(QPen(Qt::blue, 2));

    economicChartPlot->addGraph();
    economicChartPlot->graph(1)->setName("–ò–Ω—Ñ–ª—è—Ü–∏—è");
    economicChartPlot->graph(1)->setData(x, inflation);
    economicChartPlot->graph(1)->setPen(QPen(Qt::red, 2));

    economicChartPlot->addGraph();
    economicChartPlot->graph(2)->setName("–°—Ç–∞–≤–∫–∏");
    economicChartPlot->graph(2)->setData(x, rates);
    economicChartPlot->graph(2)->setPen(QPen(Qt::darkGreen, 2));

    economicChartPlot->legend->setVisible(true);
    economicChartPlot->rescaleAxes();
    economicChartPlot->replot();

    // --- –ü–æ–¥–ø–∏—Å—å –ø–æ–¥ –≥—Ä–∞—Ñ–∏–∫–æ–º ---
    QLabel *chartLabel = new QLabel("–ì—Ä–∞—Ñ–∏–∫: –í–í–ü / –ò–Ω—Ñ–ª—è—Ü–∏—è / –°—Ç–∞–≤–∫–∏", dashboardWidget);
    chartLabel->setAlignment(Qt::AlignCenter);
    chartLabel->setStyleSheet("font-weight: bold; font-size: 16px; color: #22304a;");

    // --- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≥—Ä–∞—Ñ–∏–∫–æ–º –∏ –ø–æ–¥–ø–∏—Å—å—é ---
    QVBoxLayout *chartLayout = new QVBoxLayout();
    chartLayout->addWidget(economicChartPlot);
    chartLayout->addWidget(chartLabel);

    QWidget *chartContainer = new QWidget(dashboardWidget);
    chartContainer->setLayout(chartLayout);
    chartContainer->setMinimumSize(300, 200);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    chartContainer->setProperty("glass", 1);

    // --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π layout ---
    widgetsLayout->addWidget(chartContainer);

    // --- –õ–µ–Ω—Ç–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π ---
    eventFeedBox = new QTextEdit(dashboardWidget);
    eventFeedBox->setReadOnly(true);
    eventFeedBox->setText(
        "üî¥ –ü—Ä–æ—Ç–µ—Å—Ç—ã –≤ —Ä–µ–≥–∏–æ–Ω–µ X\n"
        "üå™ –£—Ä–∞–≥–∞–Ω –≤–æ –í—å–µ—Ç–Ω–∞–º–µ\n"
        "üìâ –†–µ—Ü–µ—Å—Å–∏—è –≤ —Å—Ç—Ä–∞–Ω–µ Z\n"
        "üö® –ö–∏–±–µ—Ä–∞—Ç–∞–∫–∞ –Ω–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É\n"
        "üî• –ü–æ–∂–∞—Ä –≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –∑–æ–Ω–µ"
        );

    QLabel *eventLabel = new QLabel("–õ–µ–Ω—Ç–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π", dashboardWidget);
    eventLabel->setAlignment(Qt::AlignCenter);
    eventLabel->setStyleSheet("font-weight: 600; font-size: 15px; color: #22304a;");

    eventFeedBox->setMinimumSize(300, 180);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    eventFeedBox->setProperty("glass", 1);
    eventFeedBox->setStyleSheet(R"(
    QTextEdit {
        background-color: rgba(255, 255, 255, 0.4);
        border: none;
        font-size: 14px;
        padding: 8px;
    }
)");

    // --- –¢–æ–ø-3 —Ä–∏—Å–∫–∞ –¥–Ω—è (—Å–ø–∏—Å–æ–∫ + –ø–æ–¥–ø–∏—Å—å) ---
    topRiskList = new QListWidget(dashboardWidget);
    topRiskList->addItems({
        "1. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å",
        "2. –ì–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å",
        "3. –ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ"
    });
    topRiskList->setMinimumSize(300, 180);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    topRiskList->setStyleSheet(R"(
    QListWidget {
        background-color: rgba(255,255,255,0.4);
        border: none;
        font-size: 14px;
        padding: 8px;
    }
    QListWidget::item {
        padding: 6px;
    }
)");

    QLabel *topRiskLabel = new QLabel("–¢–æ–ø-3 —Ä–∏—Å–∫–∞ –¥–Ω—è", dashboardWidget);
    topRiskLabel->setAlignment(Qt::AlignCenter);
    topRiskLabel->setStyleSheet("font-weight: 600; font-size: 15px; color: #22304a;");

    // --- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–¥–ø–∏—Å–∏ ---
    QVBoxLayout *topRiskLayout = new QVBoxLayout();
    topRiskLayout->addWidget(topRiskList);
    topRiskLayout->addWidget(topRiskLabel);

    QWidget *topRiskContainer = new QWidget(dashboardWidget);
    topRiskContainer->setLayout(topRiskLayout);
    topRiskContainer->setMinimumSize(300, 200);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    topRiskContainer->setProperty("glass", 1);

    // --- –î–æ–±–∞–≤–ª—è–µ–º –≤ layout ---
    widgetsLayout->addWidget(topRiskContainer);

    // --- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–µ–Ω—Ç—ã –∏ –ø–æ–¥–ø–∏—Å–∏ ---
    QVBoxLayout *eventLayout = new QVBoxLayout();
    eventLayout->addWidget(eventFeedBox);
    eventLayout->addWidget(eventLabel);

    QWidget *eventContainer = new QWidget(dashboardWidget);
    eventContainer->setLayout(eventLayout);
    eventContainer->setMinimumSize(300, 200);  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    eventContainer->setProperty("glass", 1);

    // --- –î–æ–±–∞–≤–ª—è–µ–º –≤ layout ---
    widgetsLayout->addWidget(eventContainer);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
    mainLayout->addWidget(dashFrame);
    mainLayout->addSpacing(12);
    mainLayout->addLayout(filterLayout);
    mainLayout->addSpacing(10);
    mainLayout->addLayout(widgetsLayout);

    updateDashboardContent();

    connect(regionCombo, &QComboBox::currentTextChanged, this, &MainWindow::updateDashboardContent);
    connect(periodCombo, &QComboBox::currentTextChanged, this, &MainWindow::updateDashboardContent);
    connect(typeCombo, &QComboBox::currentTextChanged, this, &MainWindow::updateDashboardContent);
}

void MainWindow::updateDashboardContent() {
    QString region = regionCombo->currentText(); // –¢–µ–∫—É—â–∏–π —Ä–µ–≥–∏–æ–Ω
    QString period = periodCombo->currentText(); // –ü–µ—Ä–∏–æ–¥
    QString type = typeCombo->currentText(); // –¢–∏–ø —Ä–∏—Å–∫–∞

    // --- –ö–∞—Ä—Ç–∞ —Ä–∏—Å–∫–æ–≤ (–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –ø–æ —Ä–µ–≥–∏–æ–Ω—É) ---
    QString resourcePath;
    if (region == "–°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞") {
        resourcePath = ":/NorthAmerica.png";
    } else if (region == "–ï–≤—Ä–æ–ø–∞") {
        resourcePath = ":/Europe.png";
    } else if (region == "–ê–∑–∏—è") {
        resourcePath = ":/Asia.png";
    } else if (region == "–ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫") {
        resourcePath = ":/TheMiddleEast.png";
    } else {
        resourcePath = ":/heatmap.png";
    }

    // --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã –Ω–∞ QLabel ---
    QPixmap mapPixmap(resourcePath);
    if (!mapPixmap.isNull()) {
        riskMapImage->setPixmap(mapPixmap.scaled(300, 180, Qt::KeepAspectRatio, Qt::SmoothTransformation));
    } else {
        qDebug() << "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã:" << resourcePath;
    }

    // --- –ì—Ä–∞—Ñ–∏–∫ ---
    QVector<double> x(12), gdp(12), inflation(12), rates(12);
    for (int i = 0; i < 12; ++i) {
        x[i] = i + 1;
        gdp[i] = 2 + qSin(i / 2.0);
        inflation[i] = 5 + qCos(i / 3.0);
        rates[i] = 3 + qSin(i / 1.5);

        if (type == "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π") gdp[i] += 1.0;
        if (type == "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π") inflation[i] += 0.5;
        if (region == "–ê–∑–∏—è") rates[i] += 0.3;
        if (period == "–ù–µ–¥–µ–ª—è") gdp[i] *= 1.05;
        if (period == "–ú–µ—Å—è—Ü") inflation[i] *= 1.08;
    }

    economicChartPlot->graph(0)->setData(x, gdp);
    economicChartPlot->graph(1)->setData(x, inflation);
    economicChartPlot->graph(2)->setData(x, rates);
    economicChartPlot->replot();

    // --- –õ–µ–Ω—Ç–∞ —Å–æ–±—ã—Ç–∏–π ---
    eventFeedBox->clear();
    if (region == "–ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫")
        eventFeedBox->setText("üõë –ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤ —Ä–µ–≥–∏–æ–Ω–µ\nüö® –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å\nüìâ –ü–∞–¥–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π");
    else if (type == "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π")
        eventFeedBox->setText("üå™ –£—Ä–∞–≥–∞–Ω –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ\nüî• –ü–æ–∂–∞—Ä –≤ –ª–µ—Å–Ω–æ–π –∑–æ–Ω–µ\nüåä –ù–∞–≤–æ–¥–Ω–µ–Ω–∏–µ –≤ —Ä–µ–≥–∏–æ–Ω–µ X");
    else
        eventFeedBox->setText("üî¥ –ü—Ä–æ—Ç–µ—Å—Ç—ã –≤ —Ä–µ–≥–∏–æ–Ω–µ X\nüå™ –£—Ä–∞–≥–∞–Ω –≤–æ –í—å–µ—Ç–Ω–∞–º–µ\nüìâ –†–µ—Ü–µ—Å—Å–∏—è –≤ —Å—Ç—Ä–∞–Ω–µ Z");

    // --- –¢–æ–ø-3 —Ä–∏—Å–∫–∞ –¥–Ω—è ---
    topRiskList->clear();
    if (type == "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π") {
        topRiskList->addItems({
            "1. –ì–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å",
            "2. –ú–∞—Å—Å–æ–≤—ã–µ –ø—Ä–æ—Ç–µ—Å—Ç—ã",
            "3. –°–∞–Ω–∫—Ü–∏–∏ –∏ —Ç–æ—Ä–≥–æ–≤—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã"
        });
    } else if (type == "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π") {
        topRiskList->addItems({
            "1. –ü—Ä–∏—Ä–æ–¥–Ω—ã–µ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã",
            "2. –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
            "3. –ù–∞–≤–æ–¥–Ω–µ–Ω–∏—è –∏ —É—Ä–∞–≥–∞–Ω—ã"
        });
    } else {
        topRiskList->addItems({
            "1. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å",
            "2. –ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ",
            "3. –†–µ—Ü–µ—Å—Å–∏—è"
        });
    }

    // --- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∏—Å–∫–∞ ---
    int value = 0;
    if (region == "–°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞") value = 45;
    else if (region == "–ê–∑–∏—è") value = 78;
    else if (region == "–ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫") value = 88;
    else if (region == "–ï–≤—Ä–æ–ø–∞") value = 65;

    riskCircle->setValue(value);

    QString zone, color;
    if (value >= 80) { zone = "(–∫—Ä–∞—Å–Ω–∞—è –∑–æ–Ω–∞)"; color = "#e74c3c"; }
    else if (value >= 50) { zone = "(–∂—ë–ª—Ç–∞—è –∑–æ–Ω–∞)"; color = "#f7b731"; }
    else { zone = "(–∑–µ–ª—ë–Ω–∞—è –∑–æ–Ω–∞)"; color = "#2ecc71"; }

    int changeValue = 0; // –±–∞–∑–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    if (period == "–î–µ–Ω—å") changeValue = 2;
    else if (period == "–ù–µ–¥–µ–ª—è") changeValue = 7;
    else if (period == "–ú–µ—Å—è—Ü") changeValue = 15;

    if (region == "–ê–∑–∏—è") changeValue += 3;
    if (type == "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π") changeValue += 2;

    riskLabel->setText(QString("–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: <b>%1%</b> <span style='color:%2;'>%3</span>").arg(value).arg(color).arg(zone));
    QString changePeriod;
    if (period == "–î–µ–Ω—å")        changePeriod = "–∑–∞ –¥–µ–Ω—å";
    else if (period == "–ù–µ–¥–µ–ª—è") changePeriod = "–∑–∞ –Ω–µ–¥–µ–ª—é";
    else if (period == "–ú–µ—Å—è—Ü")  changePeriod = "–∑–∞ –º–µ—Å—è—Ü";

    changeLabel->setText(QString("‚Üë <b>%1%</b> %2").arg(changeValue).arg(changePeriod));
    analysisLabel->setText(QString("–†–æ—Å—Ç —Ä–∏—Å–∫–æ–≤ –≤ —Ä–µ–≥–∏–æ–Ω–µ <b>%1</b>").arg(region));
}

void MainWindow::createFooter() {
    footerToolbar = new QToolBar(this);
    footerToolbar->setToolButtonStyle(Qt::ToolButtonTextUnderIcon);
    footerToolbar->setMovable(false); // –ó–∞–ø—Ä–µ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è

    // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
    homeAction = new QAction(QIcon(":/icons/home_modern.svg"), "–ì–ª–∞–≤–Ω–∞—è", this);
    analyticsAction = new QAction(QIcon(":/icons/chart_modern.svg"), "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", this);
    alertsAction = new QAction(QIcon(":/icons/bell_modern.svg"), "–û–ø–æ–≤–µ—â–µ–Ω–∏—è", this);
    reportsAction = new QAction(QIcon(":/icons/report_modern.svg"), "–û—Ç—á—ë—Ç—ã", this);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç—É–ª–±–∞—Ä
    footerToolbar->addAction(homeAction);
    footerToolbar->addAction(analyticsAction);
    footerToolbar->addAction(alertsAction);
    footerToolbar->addAction(reportsAction);

    // --–ê–Ω–∞–ª–∏—Ç–∏–∫–∞connect(analyticsAction, &QAction::triggered, this, &MainWindow::showAnalytics);
    connect(analyticsAction, &QAction::triggered, this, &MainWindow::showAnalyzeDialog);

    // --- –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ ---
    settingsMenu = new QMenu(this);
    lightThemeAction = new QAction(QIcon(":/icons/theme_light.svg"), "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞", this);
    darkThemeAction  = new QAction(QIcon(":/icons/theme_dark.svg"),  "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞", this);
    settingsMenu->addAction(lightThemeAction);
    settingsMenu->addAction(darkThemeAction);

    connect(lightThemeAction, &QAction::triggered, this, [this](){
        setTheme(":/theme_light.qss");
    });
    connect(darkThemeAction, &QAction::triggered, this, [this](){
        setTheme(":/theme_dark.qss");
    });

    // --- –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–µ–Ω—é ---
    QToolButton *settingsButton = new QToolButton(this);
    settingsButton->setIcon(QIcon(":/icons/settings_modern.svg"));
    settingsButton->setText("–ù–∞—Å—Ç—Ä–æ–π–∫–∏");
    settingsButton->setToolButtonStyle(Qt::ToolButtonTextUnderIcon);
    settingsButton->setPopupMode(QToolButton::InstantPopup);
    settingsButton->setMenu(settingsMenu);

    connect(alertsAction, &QAction::triggered, this, [this]() {
        stackedWidget->setCurrentWidget(alertsWidget);
    });
    connect(reportsAction, &QAction::triggered, this, [this]() {
        stackedWidget->setCurrentWidget(reportsWidget);
    });

    footerToolbar->addWidget(settingsButton);
}

void MainWindow::showAlerts() {
    if (!alertsWidget) {
        alertsWidget = new AlertsWidget(this); // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç, –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
        stackedWidget->addWidget(alertsWidget); // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫
    }
    stackedWidget->setCurrentWidget(alertsWidget); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ
}

void MainWindow::showReports() {
    if (!reportsWidget) {
        reportsWidget = new ReportsWidget(this);
        stackedWidget->addWidget(reportsWidget);
    }
    stackedWidget->setCurrentWidget(reportsWidget);
}

void MainWindow::showMainScreen() {
    stackedWidget->setCurrentWidget(mainScreenWidget); // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω
}

void MainWindow::setTheme(const QString &themeFile)
{
    QFile file(themeFile);
    if (file.open(QFile::ReadOnly)) {
        QString styleSheet = QLatin1String(file.readAll());
        qApp->setStyleSheet(styleSheet); // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    }
    else {
        QMessageBox::warning(this, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–º—É");
    }
}

void MainWindow::showAnalytics() {
    stackedWidget->setCurrentWidget(macroWidget);
}

// –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞
void MainWindow::showAnalyzeDialog() {
    QStringList options;
    options << "–ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"
            << "–°–æ–±—ã—Ç–∏–π–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (Event Risk)"
            << "–°—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤";
    bool ok = false;
    QString choice = QInputDialog::getItem(this, "–í—ã–±–æ—Ä –∞–Ω–∞–ª–∏–∑–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞:", options, 0, false, &ok);
    if (!ok) return;

    if (choice == "–ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑") {
        showMacroAnalysis();
    } else if (choice == "–°–æ–±—ã—Ç–∏–π–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (Event Risk)") {
        showEventRiskAnalysis();
    } else if (choice == "–°—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤") {
        showStochasticRiskAnalysis();
    }
}

void MainWindow::showMacroAnalysis() {
    stackedWidget->setCurrentWidget(macroWidget); // –ú–∞–∫—Ä–æ–∞–Ω–∞–ª–∏–∑
}

void MainWindow::showEventRiskAnalysis() {
    stackedWidget->setCurrentWidget(eventRiskWidget); // –°–æ–±—ã—Ç–∏–π–Ω—ã–π –∞–Ω–∞–ª–∏–∑
}
void MainWindow::showStochasticRiskAnalysis() {
    stackedWidget->setCurrentWidget(stochasticWidget); // –°—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
}

void MainWindow::updateRiskInfo(int riskLevel, int riskChange, const QString &description) {
    riskCircle->setValue(riskLevel); // –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä

    QString zone;
    QString color;
    if (riskLevel >= 80) {
        zone = "(–∫—Ä–∞—Å–Ω–∞—è –∑–æ–Ω–∞)";
        color = "#e74c3c";
    } else if (riskLevel >= 50) {
        zone = "(–∂—ë–ª—Ç–∞—è –∑–æ–Ω–∞)";
        color = "#f7b731";
    } else {
        zone = "(–∑–µ–ª—ë–Ω–∞—è –∑–æ–Ω–∞)";
        color = "#2ecc71";
    }

    riskLabel->setText(QString("–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: <b>%1%</b> <span style='color:%2;'>%3</span>").arg(riskLevel).arg(color).arg(zone));
    changeLabel->setText(QString("%1 <b>%2%</b> –∑–∞ –¥–µ–Ω—å").arg(riskChange >= 0 ? "‚Üë" : "‚Üì").arg(abs(riskChange)));
    changeLabel->setStyleSheet(QString("font-size: 14px; color: %1;").arg(riskChange >= 0 ? "#00b894" : "#e74c3c"));
    analysisLabel->setText(description);
}

void MainWindow::keyPressEvent(QKeyEvent *event) {
    if (event->key() == Qt::Key_Return || event->key() == Qt::Key_Enter)

    event->accept();
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
void MainWindow::handleSearch() {
    QString query = searchLine->text().trimmed().toLower();

    if (query.isEmpty() || query.length() < 2)
        return;

    QStringList results;

    // 1. –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
    if (query.contains("–µ–≤—Ä–æ–ø–∞")) results << "–†–µ–≥–∏–æ–Ω: –ï–≤—Ä–æ–ø–∞ (—Ä–∏—Å–∫ 55%)";
    if (query.contains("—Å—à–∞") || query.contains("–∞–º–µ—Ä–∏–∫–∞")) results << "–†–µ–≥–∏–æ–Ω: –°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞ (—Ä–∏—Å–∫ 45%)";
    if (query.contains("–∞–∑–∏—è")) results << "–†–µ–≥–∏–æ–Ω: –ê–∑–∏—è (—Ä–∏—Å–∫ 78%)";
    if (query.contains("–±–ª–∏–∂–Ω–∏–π –≤–æ—Å—Ç–æ–∫")) results << "–†–µ–≥–∏–æ–Ω: –ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫ (—Ä–∏—Å–∫ 88%)";

    // 2. –ü–æ–∏—Å–∫ –ø–æ —Ç–∏–ø–∞–º —Ä–∏—Å–∫–∞
    if (query.contains("–∏–Ω—Ñ–ª—è—Ü–∏—è") || query.contains("–≤–≤–ø") || query.contains("—Å—Ç–∞–≤–∫–∏"))
        results << "–¢–∏–ø —Ä–∏—Å–∫–∞: –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π\n- –ò–Ω—Ñ–ª—è—Ü–∏—è +0.6%\n- –í–í–ü -1.2%";
    if (query.contains("–ø—Ä–æ—Ç–µ—Å—Ç") || query.contains("—Å–∞–Ω–∫—Ü–∏–∏") || query.contains("–ø–æ–ª–∏—Ç–∏–∫–∞"))
        results << "–¢–∏–ø —Ä–∏—Å–∫–∞: –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π\n- –ú–∞—Å—Å–æ–≤—ã–µ –ø—Ä–æ—Ç–µ—Å—Ç—ã\n- –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å";
    if (query.contains("—É—Ä–∞–≥–∞–Ω") || query.contains("–ø–æ–∂–∞—Ä") || query.contains("–ø—Ä–∏—Ä–æ–¥–∞"))
        results << "–¢–∏–ø —Ä–∏—Å–∫–∞: –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π\n- –£—Ä–∞–≥–∞–Ω –≤ —Ä–µ–≥–∏–æ–Ω–µ Y\n- –õ–µ—Å–Ω—ã–µ –ø–æ–∂–∞—Ä—ã";

    // 3. –ü–æ–∏—Å–∫ –ø–æ —Å–æ–±—ã—Ç–∏—è–º
    if (query.contains("—É–≥—Ä–æ–∑–∞") || query.contains("—Å–æ–±—ã—Ç–∏–µ") || query.contains("–∞–≤–∞—Ä–∏—è"))
        results << "–°–æ–±—ã—Ç–∏—è:\nüö® –ö–∏–±–µ—Ä–∞—Ç–∞–∫–∞ –Ω–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É\nüî• –ü–æ–∂–∞—Ä –Ω–∞ –∑–∞–≤–æ–¥–µ\nüìâ –†–µ—Ü–µ—Å—Å–∏—è –≤ —Å—Ç—Ä–∞–Ω–µ Z";

    if (results.isEmpty())
        results << "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: \"" + query + "\"";

    SearchResultsDialog *dialog = new SearchResultsDialog(this);
    dialog->setResults(results);
    dialog->exec();

    QString currentRegion = regionCombo->currentText();
    QString currentPeriod = periodCombo->currentText();
    QString currentType = typeCombo->currentText();
}
