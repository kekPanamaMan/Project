#include "eventriskwidget.h"

#include <QMessageBox>
#include <QTime>
#include <QStringList>
#include <QListWidgetItem>
#include <QMenu>
#include <QToolButton>
#include <QVBoxLayout>

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–∏–¥–∂–µ—Ç–∞ —Å–æ–±—ã—Ç–∏–π–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
EventRiskWidget::EventRiskWidget(QWidget *parent) : QWidget(parent) {
    setupUI();

    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
    QTimer *timer = new QTimer(this);
    connect(timer, &QTimer::timeout, this, &EventRiskWidget::fetchEvents);
    timer->start(3 * 60 * 60 * 1000);

    fetchEvents();
}

void EventRiskWidget::setupUI() {

    // –§–∏–ª—å—Ç—Ä—ã
    typeCombo = new QComboBox;
    typeCombo->addItems({"–í—Å–µ —Ç–∏–ø—ã", "–ü–æ–ª–∏—Ç–∏–∫–∞ üåê", "–≠–∫–æ–Ω–æ–º–∏–∫–∞ üí∞", "–ü—Ä–∏—Ä–æ–¥–∞ üå™", "–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ üî•"});

    threatLevelCombo = new QComboBox;
    threatLevelCombo->addItems({"–õ—é–±–æ–π —É—Ä–æ–≤–µ–Ω—å", "–ù–∏–∑–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–í—ã—Å–æ–∫–∏–π"});

    countryCombo = new QComboBox;
    countryCombo->addItems({"–í—Å–µ —Å—Ç—Ä–∞–Ω—ã", "–£–∫—Ä–∞–∏–Ω–∞", "–†–æ—Å—Å–∏—è", "–°–®–ê", "–ö–∏—Ç–∞–π", "–ï–°"});

    // Layout –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    QVBoxLayout *filterLayout = new QVBoxLayout;
    filterLayout->addWidget(new QLabel("–¢–∏–ø —Å–æ–±—ã—Ç–∏—è:"));
    filterLayout->addWidget(typeCombo);
    filterLayout->addWidget(new QLabel("–£—Ä–æ–≤–µ–Ω—å —É–≥—Ä–æ–∑—ã:"));
    filterLayout->addWidget(threatLevelCombo);
    filterLayout->addWidget(new QLabel("–ì–µ–æ–≥—Ä–∞—Ñ–∏—è:"));
    filterLayout->addWidget(countryCombo);
    filterLayout->addStretch();

    QGroupBox *filterBox = new QGroupBox("–§–∏–ª—å—Ç—Ä—ã"); // –≥—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    filterBox->setLayout(filterLayout);

    // –ö–∞—Ä—Ç–∞
    mapWidget = new WorldMapWidget(this);
    mapWidget->setMinimumSize(480, 320);
    mapWidget->setStyleSheet("background:#eaf2ff; border:1px solid #4f8cff; border-radius:12px; font-size:16px;");

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–µ –Ω–∞ –∫–∞—Ä—Ç–µ: –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–µ
    connect(mapWidget, &WorldMapWidget::countryEventsChanged, this, [this](const QString& country, const QList<CountryEvent>& events){
        eventList->clear();
        for (const auto& ev : events) {
            eventList->addItem(QString("%1 (—É—Ä–æ–≤–µ–Ω—å: %2)").arg(ev.description, ev.riskLevel));
        }
    });

    // –õ–µ–Ω—Ç–∞ —Å–æ–±—ã—Ç–∏–π
    eventList = new QListWidget;
    eventList->setSelectionMode(QAbstractItemView::MultiSelection);

    // –ö–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    exportPdfBtn = new QPushButton("–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF");
    exportExcelBtn = new QPushButton("–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel");

    // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (—Å–æ–±—ã—Ç–∏—è + —ç–∫—Å–ø–æ—Ä—Ç)
    QVBoxLayout *rightLayout = new QVBoxLayout;
    rightLayout->addWidget(new QLabel("–°–æ–±—ã—Ç–∏—è (—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—è):"));
    rightLayout->addWidget(eventList, 1);
    QHBoxLayout *exportLayout = new QHBoxLayout;
    exportLayout->addWidget(exportPdfBtn);
    exportLayout->addWidget(exportExcelBtn);
    rightLayout->addLayout(exportLayout);

    // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (—Ñ–∏–ª—å—Ç—Ä—ã + –∫–∞—Ä—Ç–∞)
    QSplitter *splitter = new QSplitter;
    QWidget *leftPanel = new QWidget;
    QVBoxLayout *leftPanelLayout = new QVBoxLayout(leftPanel);
    leftPanelLayout->addWidget(filterBox);
    leftPanelLayout->addWidget(mapWidget, 1);
    splitter->addWidget(leftPanel);

    QWidget *rightPanel = new QWidget;
    rightPanel->setLayout(rightLayout);
    splitter->addWidget(rightPanel);

    // –°–∏–≥–Ω–∞–ª—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
    connect(typeCombo, &QComboBox::currentTextChanged, this, &EventRiskWidget::updateFilters);
    connect(threatLevelCombo, &QComboBox::currentTextChanged, this, &EventRiskWidget::updateFilters);
    connect(countryCombo, &QComboBox::currentTextChanged, this, &EventRiskWidget::updateFilters);

    // –ù–∞–∂–∞—Ç–∏–µ –ø–æ —Å–æ–±—ã—Ç–∏—é
    connect(eventList, &QListWidget::itemClicked, [this](QListWidgetItem *item){
        int id = item->data(Qt::UserRole).toInt();
        for (const Event &ev : events) {
            if (ev.id == id) {
                showEventPopup(ev); // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–∫–Ω–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏
                break;
            }
        }
    });
    connect(exportPdfBtn, &QPushButton::clicked, this, &EventRiskWidget::exportToPDF);
    connect(exportExcelBtn, &QPushButton::clicked, this, &EventRiskWidget::exportToExcel);

    // –¢—É–ª–±–∞—Ä (–Ω–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è)
    QToolBar *footerToolbar = new QToolBar(this);
    footerToolbar->setToolButtonStyle(Qt::ToolButtonTextUnderIcon);
    footerToolbar->setMovable(false);

    QAction *homeAction = new QAction(QIcon(":/icons/home_modern.svg"), "–ì–ª–∞–≤–Ω–∞—è", this);
    footerToolbar->addAction(homeAction);
    QAction *analyticsAction = new QAction(QIcon(":/icons/chart_modern.svg"), "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", this);
    footerToolbar->addAction(analyticsAction);

    QAction *alertsAction = new QAction(QIcon(":/icons/bell_modern.svg"), "–û–ø–æ–≤–µ—â–µ–Ω–∏—è", this);
    footerToolbar->addAction(alertsAction);

    QAction *reportsAction = new QAction(QIcon(":/icons/report_modern.svg"), "–û—Ç—á—ë—Ç—ã", this);
    footerToolbar->addAction(reportsAction);

    // –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    QMenu *settingsMenu = new QMenu(this);
    QAction *lightThemeAction = new QAction(QIcon(":/icons/theme_light.svg"), "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞", this);
    QAction *darkThemeAction  = new QAction(QIcon(":/icons/theme_dark.svg"),  "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞", this);
    settingsMenu->addAction(lightThemeAction);
    settingsMenu->addAction(darkThemeAction);

    QToolButton *settingsButton = new QToolButton(this);
    settingsButton->setIcon(QIcon(":/icons/settings_modern.svg"));
    settingsButton->setText("–ù–∞—Å—Ç—Ä–æ–π–∫–∏");
    settingsButton->setToolButtonStyle(Qt::ToolButtonTextUnderIcon);
    settingsButton->setPopupMode(QToolButton::InstantPopup);
    settingsButton->setMenu(settingsMenu);

    footerToolbar->addWidget(static_cast<QWidget*>(settingsButton));

    // --- Layout ---
    QVBoxLayout *mainLayout = new QVBoxLayout(this); // –æ–±—ä—è–≤–ª—è–µ–º –û–î–ò–ù —Ä–∞–∑!

    // --- –ö–Ω–æ–ø–∫–∞ "–ù–∞ –≥–ª–∞–≤–Ω—É—é" ---
    QPushButton *homeButton = new QPushButton("üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é");
    homeButton->setStyleSheet("padding: 8px 16px; background-color: #4f8cff; color: white; border-radius: 8px;");
    connect(homeButton, &QPushButton::clicked, this, [this]() {
        emit goHome();
    });

    mainLayout->addWidget(homeButton, 0, Qt::AlignLeft);
    mainLayout->addWidget(splitter, 1);
    setLayout(mainLayout);

    // --- –°–∏–≥–Ω–∞–ª—ã ---
    connect(homeAction, &QAction::triggered, this, [this](){ emit goHome(); });
}

void EventRiskWidget::fetchEvents() { // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–±—ã—Ç–∏—è—Ö
    // –ó–¥–µ—Å—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –±–∞–∑–∞–º–∏ —Ä–∏—Å–∫–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
    events.clear();

    // –ü—Ä–∏–º–µ—Ä —Å–æ–±—ã—Ç–∏—è
    events.append(Event{
        1,
        "–≠–∫–æ–Ω–æ–º–∏–∫–∞ üí∞",
        "–í—ã—Å–æ–∫–∏–π",
        "–£–∫—Ä–∞–∏–Ω–∞",
        "–†–∏—Å–∫ disruptions –ø–æ—Å—Ç–∞–≤–æ–∫ –≥–∞–∑–∞ –≤ –ï–° ‚Äî –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∏–Ω—Ñ–ª—è—Ü–∏—é +1.2%",
        QStringList() << "–°–∞–Ω–∫—Ü–∏–∏" << "–ì–∞–∑",
        1.2,
        {50.45, 30.52},
        "red"
    });
    events.append(Event{
        2,
        "–ü—Ä–∏—Ä–æ–¥–∞ üå™",
        "–°—Ä–µ–¥–Ω–∏–π",
        "–°–®–ê",
        "–£—Ä–∞–≥–∞–Ω –≤ –¢–µ—Ö–∞—Å–µ ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–±–æ–∏ —Å –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏ –Ω–µ—Ñ—Ç–∏",
        QStringList() << "–£—Ä–∞–≥–∞–Ω" << "–ù–µ—Ñ—Ç—å",
        0.7,
        {29.76, -95.36},
        "yellow"
    });

    updateFilters(); // —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏

    // –û–±–Ω–æ–≤–∏–º —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
    int riskValue = 72;
    int riskChange = 4;
    QString description = "–†–∏—Å–∫–∏ –≤–æ–∑—Ä–æ—Å–ª–∏ –∏–∑-–∑–∞ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π";
    emit updateRisk(riskValue, riskChange, description);
}

void EventRiskWidget::updateFilters() {
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    QString type = typeCombo->currentText();
    QString threat = threatLevelCombo->currentText();
    QString country = countryCombo->currentText();

    QList<Event> filtered;
    for (const Event &ev : events) {
        if ((type == "–í—Å–µ —Ç–∏–ø—ã" || ev.type == type) &&
            (threat == "–õ—é–±–æ–π —É—Ä–æ–≤–µ–Ω—å" || ev.threatLevel == threat) &&
            (country == "–í—Å–µ —Å—Ç—Ä–∞–Ω—ã" || ev.country == country)) {
            filtered.append(ev);
        }
    }

    // –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç—É –∏ –ª–µ–Ω—Ç—É —Å–æ–±—ã—Ç–∏–π
    updateMap();
    updateEventList(filtered);
}

void EventRiskWidget::updateMap() {
    // –î–ª—è WorldMapWidget –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    if (mapWidget)
        mapWidget->setStatusText("–û–±–Ω–æ–≤–ª–µ–Ω–æ: " + QTime::currentTime().toString("HH:mm:ss"));
}

void EventRiskWidget::updateEventList(const QList<Event> &filtered) { // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π (–ª–µ–Ω—Ç—ã)
    eventList->clear();
    for (const Event &ev : filtered) {
        QString txt = QString("%1 [%2] %3\n%4\n–í–ª–∏—è–Ω–∏–µ: %5%")
                          .arg(ev.type, ev.threatLevel, ev.country, ev.description)
                          .arg(ev.impactPercent, 0, 'f', 2);
        QListWidgetItem *item = new QListWidgetItem(txt);
        item->setData(Qt::UserRole, ev.id);
        // –¶–≤–µ—Ç–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞
        if (ev.markerColor == "red")
            item->setIcon(QIcon(":/icons/red_dot.png"));
        else if (ev.markerColor == "yellow")
            item->setIcon(QIcon(":/icons/yellow_dot.png"));
        else
            item->setIcon(QIcon(":/icons/blue_dot.png"));
        eventList->addItem(item);
    }
}
void EventRiskWidget::showEventPopup(const Event &ev) { // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –ø–æ —Å–æ–±—ã—Ç–∏—é
    QString msg = QString("<b>%1</b><br>%2<br><i>–í–ª–∏—è–Ω–∏–µ: %3%</i><br><br>–¢–µ–≥–∏: %4")
                      .arg(ev.type)
                      .arg(ev.description)
                      .arg(ev.impactPercent, 0, 'f', 2)
                      .arg(ev.tags.join(", "));
    QMessageBox::information(this, "–î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è", msg);
}

void EventRiskWidget::exportToPDF() {
    QMessageBox::information(this, "–≠–∫—Å–ø–æ—Ä—Ç", "–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF (–∑–∞–≥–ª—É—à–∫–∞)");
}

void EventRiskWidget::exportToExcel() {
    QMessageBox::information(this, "–≠–∫—Å–ø–æ—Ä—Ç", "–≠–∫—Å–ø–æ—Ä—Ç –≤ Excel (–∑–∞–≥–ª—É—à–∫–∞)");
}

void EventRiskWidget::onMapEventClicked(int eventId) { // –ö–ª–∏–∫ –Ω–∞ –∫–∞—Ä—Ç–µ –ø–æ —Å–æ–±—ã—Ç–∏—é
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–ª—É—à–∫–∞
    QMessageBox::information(this, "–ö–ª–∏–∫ –ø–æ —Å–æ–±—ã—Ç–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ", QString("ID —Å–æ–±—ã—Ç–∏—è: %1").arg(eventId));
}

void EventRiskWidget::addToReport() { // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –æ—Ç—á–µ—Ç
    QMessageBox::information(this, "–î–æ–±–∞–≤–∏—Ç—å –≤ –æ—Ç—á—ë—Ç", "–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—Ç—á—ë—Ç (–∑–∞–≥–ª—É—à–∫–∞)");
}
